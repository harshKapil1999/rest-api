

// dynamic routes for each user
/* app.get('/api/users/:id', (req, res) => {
    const id = Number(req.params.id);
    const user = users.find((user) => user.id === id);
    return res.json(user);
}) */



//PATCH Request
//Update the information of the user from the array with the given params id and request body
/* app.patch('/api/users/:id', (req, res) => {
    //Updating the user with id
    const id = Number(req.params.id);
    const userIndex = users.findIndex((user) => user.id === id);
    //console.log(userIndex);
    const body = req.body;
    //console.log(body);
    users[userIndex] = { ...users[userIndex], ...body };
    
    fs.writeFile("./MOCK_DATA.json", JSON.stringify(users), (err, data) => {
        return res.json({ status: "success", user: users[userIndex] });
    })
}) */

//DELETE Request
//Delete the user from the array with the given params id
/* app.delete('/api/users/:id', (req, res) => {
    //Delete the user with id
    const id = Number(req.params.id);
    const userIndex = users.findIndex((user) => user.id === id);
    const removedUser = users.splice(userIndex, 1);

    fs.writeFile("./MOCK_DATA.json", JSON.stringify(users), (err, data) => {
        return res.json({ status: "sucess", user_removed: removedUser} );
    })
}) */

//PUT Request
//Update the entire information of the user from the array with the given params id and request body
/* app.put('/api/users/:id', (req, res) => {
    const id = Number(req.params.id);
    const userIndex = users.findIndex((user) => user.id === id);
    const body = req.body;

    users[userIndex] = { ...users[userIndex], id: id, ...body };

    fs.writeFile("./MOCK_DATA.json", JSON.stringify(users), (err, data) => {
        return res.json({ status: "sucess", updated_user: users[userIndex]} );
    })
})
 */
